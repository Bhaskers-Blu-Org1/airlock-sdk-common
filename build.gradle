apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'


buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }

}

allprojects {
    repositories {
        jcenter()
    }
}

//should be compatible with max JRE android supports
targetCompatibility = '1.7'
sourceCompatibility = '1.7'


ext {
    SNAPSHOT = false
    RELEASE_VERSION_MICRO = 1
    BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: devBuildNumber
    BUILD_NUMBER = SNAPSHOT ? BUILD_NUMBER : RELEASE_VERSION_MICRO
}

version = '5.2.' + BUILD_NUMBER
jar.baseName = "debug/" + project.name


dependencies {

    compile 'org.jetbrains:annotations-java5:15.0'
    compile 'org.mozilla:rhino:1.7.7.1'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
    compile 'org.json:json:20171018'
    compile 'com.google.code.findbugs:annotations:2.0.3'
    compile 'junit:junit:4.12'
    compile 'com.google.dagger:dagger:2.10'
    compile 'com.google.dagger:dagger-compiler:2.10'
    compile 'javax.annotation:javax.annotation-api:1.3.1'
    
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    testCompile 'org.json:json:20171018'
    testCompile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.jetbrains:annotations-java5:15.0'
    testCompile 'com.google.code.findbugs:annotations:2.0.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.json:json:20171018'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.squareup.okhttp3:okhttp:3.4.1'
    testCompile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'

    testCompile "javax.xml.bind:jaxb-api:2.2.11"
    testCompile "com.sun.xml.bind:jaxb-core:2.2.11"
    testCompile "com.sun.xml.bind:jaxb-impl:2.2.11"
    testCompile "javax.activation:activation:1.1.1"
}

task releaseJar(type: Jar) {
    manifest {
        attributes 'Built-By' : System.properties['user.name'],
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Implementation-Title': 'Airlock SDK',
                   'Implementation-Version': version,
                   'Class-Path': configurations.compile.collect{it.name}.join(' ')
    }
    baseName = "release/" + project.name
    with jar
}

build.dependsOn testClasses
build.finalizedBy(releaseJar)

task proguard(type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.pro'
    injars 'build/libs/airlock-sdk-common-' + version + '.jar'
    outjars 'build/release/libs/airlock-sdk-common-' + version + '.jar'
    libraryjars files(configurations.compileOnly.collect())
    outputs.upToDateWhen { false }
}


proguard.dependsOn classes
testClasses.dependsOn proguard
proguard.enabled = false

task writePomFile {
    doLast {
        pom {
            project {
                inceptionYear '2019'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}

idea.module.sourceDirs += "out/production/classes/generated"

sourceSets {
    test {
        resources {
            srcDirs = ['src/test/java/com/ibm/airlock/common/data']
        }
    }
}

task copylib(type: Copy) {
    from file("$buildDir/libs/release/airlock-sdk-common-5.2.7.jar")
    into file("../airlock-sdk-android/sdk/libs")
}
